@page
@model Farmacia_Arqui_Soft.Pages.Providers.IndexModel
@{
    ViewData["Title"] = "Gestión de Proveedores";
    // 👈 Obtener el servicio de encriptación desde el contexto
    var encryptionService = (Farmacia_Arqui_Soft.Domain.Ports.IEncryptionService)Model.HttpContext.RequestServices.GetService(typeof(Farmacia_Arqui_Soft.Domain.Ports.IEncryptionService))!;
}

<div class="d-flex justify-content-between align-items-center mb-4 flex-wrap gap-3">
    <h2 class="fw-bold text-success mb-0">
        <i class="bi bi-truck me-2"></i> Gestión de Proveedores
    </h2>

    <a asp-page="/Providers/Create" class="btn btn-success shadow-sm rounded-pill px-4 d-flex align-items-center">
        <i class="bi bi-plus-circle me-2"></i> Nuevo Proveedor
    </a>
</div>

@if (TempData["Success"] is string ok && !string.IsNullOrWhiteSpace(ok))
{
    <div class="alert alert-success alert-dismissible fade show shadow-sm" role="alert">
        <i class="bi bi-check-circle-fill me-2"></i> @ok
        <button type="button" class="btn-close"
                data-bs-dismiss="alert"></button>
    </div>
}
@if (TempData["Error"] is string err && !string.IsNullOrWhiteSpace(err))
{
    <div class="alert alert-danger alert-dismissible fade show shadow-sm" role="alert">
        <i class="bi bi-exclamation-triangle-fill me-2"></i> @err
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<div class="card shadow-sm border-0">
    <div class="card-body p-0">
        <table class="table table-hover align-middle mb-0 text-center">
            <thead class="table-success text-dark">

                <tr>
                    <th>Nombre</th>
                    <th>NIT</th>
                    <th>Email</th>
                    <th>Teléfono</th>

                    <th>Estado</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Providers != null && Model.Providers.Any())
                {

                    foreach (var p in Model.Providers)
                    {
                        // 👈 Cifrar el ID del proveedor
                        string encryptedId = encryptionService.EncryptId(p.id);

                        <tr>
                            <td class="fw-semibold">@p.firstName @p.lastName</td>

                            <td>@p.nit</td>
                            <td>@p.email</td>
                            <td>@p.phone</td>

                            <td>
                                <span class="badge @(p.status == 1 ?
                                      "bg-success" : "bg-secondary")">
                            @(p.status == 1 ? "Activo" : "Inactivo")
                        </span>

                            </td>
                            <td>
                                <div class="d-flex justify-content-center gap-2 flex-nowrap">

                                    <a asp-page="/Providers/Edit" asp-route-encryptedId="@encryptedId"
                                       class="btn btn-sm btn-outline-warning px-3 rounded-pill" title="Editar">
                                        <i class="bi bi-pencil"></i>

                                    </a>
                                    <button type="button"
                                            class="btn btn-sm btn-outline-danger px-3 rounded-pill"
                                            title="Eliminar"
                                            onclick="openDeleteProviderModal('@encryptedId', '@p.firstName @p.lastName')">
                                        <i class="bi bi-trash3"></i>
                                    </button>

                                </div>
                            </td>
                        </tr>
                                }

                }
                else
                {
                    <tr>
                        <td colspan="6" class="text-center text-muted py-4">

                            <i class="bi bi-inbox me-2"></i> No hay proveedores registrados.
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<partial name="_DeleteProviderModalPartial" />

@section Scripts {
    <script>
                const deleteModal = new bootstrap.Modal(document.getElementById('deleteProviderModal'));

                // 👈 La función ahora recibe el ID encriptado
                function openDeleteProviderModal(encryptedId, name) {
                    // Asumiendo que el input oculto tiene id="deleteProviderId" y name="encryptedId" para que el PageModel lo reciba.
                    document.getElementById('deleteProviderId').value = encryptedId;
                    document.getElementById('deleteProviderMessage').textContent =
                        `¿Estás seguro de eliminar al proveedor "${name}"?`;
        deleteModal.show();
                }
    </script>
}